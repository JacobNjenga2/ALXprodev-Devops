#!/bin/bash

# Summarize Pokémon Data Script
# Reads JSON files and generates a CSV report with averages

# Output CSV file
CSV_FILE="pokemon_report.csv"

# Create CSV header
echo "Name,Height (m),Weight (kg)" > "$CSV_FILE"

# Function to extract and format Pokémon data
extract_pokemon_data() {
    local json_file=$1
    
    # Extract name, height, and weight using jq
    # Convert height from decimeters to meters (divide by 10)
    # Convert weight from hectograms to kilograms (divide by 10)
    # Capitalize the first letter of the name
    jq -r --arg filename "$(basename "$json_file" .json)" '
        .name as $name |
        (.height / 10) as $height |
        (.weight / 10) as $weight |
        ($name | ascii_upcase | .[0:1] + ($name | .[1:])) as $capitalized_name |
        [$capitalized_name, $height, $weight] | join(",")
    ' "$json_file" >> "$CSV_FILE"
}

# Process all JSON files in pokemon_data directory
echo "Processing Pokémon data files..."

for json_file in pokemon_data/*.json; do
    if [ -f "$json_file" ]; then
        extract_pokemon_data "$json_file"
    fi
done

# Calculate averages using awk
echo "CSV Report generated at: $CSV_FILE"
echo ""

# Display the CSV content
cat "$CSV_FILE"

echo ""

# Calculate and display averages using awk and sed
cat "$CSV_FILE" | sed '1d' | awk -F',' '
    {
        height_sum += $2
        weight_sum += $3
        count++
    }
    END {
        if (count > 0) {
            avg_height = height_sum / count
            avg_weight = weight_sum / count
            printf "Average Height: %.2f m\n", avg_height
            printf "Average Weight: %.2f kg\n", avg_weight
        }
    }
' 